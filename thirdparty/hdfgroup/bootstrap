#! /bin/sh -
# This is not a starconf component bootstrap file; it should be maintained
# as a copy of buildsupport/starconf/bootstrap.bridging:
#   $Source: /cvs/buildsupport/starconf/bootstrap.bridging,v $
#   $Revision: 1.1 $
# (check this in to CVS using -ko to preserve above RCS info).
#
# Instead, it is a bootstrap script used for `bridging' directories,
# such as applications/ and libraries/, which group together related
# components and, when they are bootstrapped, bridge between the parent
# and the various children listed in the AC_CONFIG_SUBDIRS macro in the
# configure.ac in this directory.  That is, it is for directories which
# are traversed by the top-level bootstrap, but which are not components.


# If STAR_SUPPRESS_AUTORECONF is true in the environment, then we
# suppress the call of `autoreconf', and simply invoke ./bootstrap in
# the children.  This is here _only_ so that the top-level bootstrap
# file can suppress multiple calls of this in bootstrap scripts in its
# children, and as an optimisation.  As such, it makes sense ONLY when
# invoked from a top-level bootstrap.  This mechanism must not be used
# by users, as it is liable to change without warning.
: ${STAR_SUPPRESS_AUTORECONF=false}

if $STAR_SUPPRESS_AUTORECONF; then
    echo "Suppressing autoreconf"

    thisdir=`basename $PWD`
    for d in `autoconf --trace=AC_CONFIG_SUBDIRS:$% configure.ac` DUMMY
    do
        if test -n "$d" -a -d "$d"; then
            echo "Bootstrapping $thisdir/$d..."
            (cd $d && ./bootstrap)
        fi
    done

else

    echo "autoreconf --install --symlink" || exit 1
    autoreconf --install --symlink

    if test ! -f configure; then
        echo "Ooooh dear, autoreconf didn't work -- I can't find ./configure"
        exit 1
    fi

fi

exit 0
